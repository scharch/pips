#!/bin/bash  
#This script maps reads to the database. Also, reverses and complements reads that are reverse complements and saves in a temp file.

#HPC-specific:
module load Bowtie2/2.3.4.1
module load samtools
module load Biopython/1.65-goolf-1.7.20-Python-2.7.9

#reads bam files and ouputs the first three columns
function do_segment () {
	samtools view -F 4 $1 | sort -k 3,3 -k4,4n | awk '{ print $3 " " $2 " " $1}' | grep $2 | awk '{ print $3 " " $2 " " $1}'
}

PATH_TO_OUTPUT=$1 		#name of folder for the project 
PATH_TO_GENOME_FILE=$2 			#path to the original fastq
INDIVIDUALS_NAME=${PATH_TO_GENOME_FILE##*/} 	
INDIVIDUALS_NAME=${INDIVIDUALS_NAME%%.*}		#individual name will be differentiate mate pairs
PATH_TO_BAM_FILE="$PATH_TO_OUTPUT/bam_files/"$INDIVIDUALS_NAME".bam"		#bam file produced from bowtie2
PATH_TO_DATABASE=$3
BOWTIE_PARAM=$4

#if an output file already exists with the same name, it will be deleted
if [ -d "$PATH_TO_OUTPUT/alleles/$INDIVIDUALS_NAME" ]; then
    rm -r "$PATH_TO_OUTPUT/alleles/$INDIVIDUALS_NAME"
fi

mkdir -p "$PATH_TO_OUTPUT/bam_files"
mkdir -p $PATH_TO_OUTPUT/alleles/$INDIVIDUALS_NAME

#uses bowtie2 to map the reads to the database
bowtie2 -x $PATH_TO_DATABASE ${PATH_TO_GENOME_FILE} -S $PATH_TO_BAM_FILE --local --score-min G,20,$BOWTIE_PARAM

#creates a temporary file to identify reads that are reverse complements
awk -F'[>*]' 'NF == 3{print $2}' $PATH_TO_DATABASE.fa | 
while read num
do
	temp="^$num\*"
 	do_segment ${PATH_TO_BAM_FILE} $temp >> "$PATH_TO_OUTPUT/temp_$INDIVIDUALS_NAME.txt"		
done

#Reverses and complements sequences 
python code/unreverse.py $PATH_TO_GENOME_FILE $INDIVIDUALS_NAME $PATH_TO_OUTPUT

#remove the old temporary file
rm "$PATH_TO_OUTPUT/temp_$INDIVIDUALS_NAME.txt"
